# 下载任务创建工作流

name: down_books

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

  workflow_dispatch:
    inputs:
      download_link:
        description: '下载链接'
        required: true
        type: string
      download_name:
        description: '保存名称'
        required: false
        type: string


jobs:  # 一个工作流由一个或多个可以顺序或并行运行的作业组成
  downloader: # 处理输入信息
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Chrome and ChromeDriver
        run: |-
          CHROME_VERSION=113.0.1774.35
          # Install Chrome
          ENDPOINT='https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable'
          echo 'Installing Chrome ${CHROME_VERSION}'
          wget "${ENDPOINT}/google-chrome-stable_${CHROME_VERSION}_amd64.deb" \
            --progress=dot:giga -O /tmp/chrome.deb
          sudo apt-get install --allow-downgrades -y /tmp/chrome.deb
          rm /tmp/chrome.deb
          
          # Install ChromeDriver
          ENDPOINT='https://chromedriver.storage.googleapis.com'
          RELEASE="$(google-chrome --version | sed -E 's/.* ([0-9]+\.[0-9]+\.[0-9]+).*/\1/')"
          DRIVER_VERSION="$(wget --no-verbose -O - "${ENDPOINT}/LATEST_RELEASE_${RELEASE}")";
          echo "Installing ChromeDriver ${DRIVER_VERSION}"
          wget "${ENDPOINT}/${DRIVER_VERSION}/chromedriver_linux64.zip" \
            --progress=dot:giga -O /tmp/chromedriver.zip
          
          sudo rm -rf /opt/chromedriver
          sudo mkdir -p /opt/chromedriver
          sudo unzip /tmp/chromedriver.zip -d /opt/chromedriver
          sudo chmod +x /opt/chromedriver/chromedriver
          sudo ln -sf /opt/chromedriver/chromedriver /usr/local/bin/chromedriver
          rm /tmp/chromedriver.zip

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: Down Book
        run: |
          python3 actions/down_txt/down_book.py
        env:
          DOWNLOAD_LINK: ${{ github.event.inputs.download_link }}
          DOWNLOAD_NAME: ${{ github.event.inputs.download_name }}

      - name: Upload Book to Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: actions/down_txt/cache*.txt

      - name: Install Rclone  # TODO: Cache
        run: |
          curl https://rclone.org/install.sh | sudo bash
          rclone version

      - name: Local Rclone Config
        run: |
          mkdir -p ~/.config/rclone
          cat << EOF > ~/.config/rclone/rclone.conf
          ${{ secrets.RCLONE_CONFIG }}
          EOF
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Upload File To OneDrive
        run: |
          rclone mkdir ${{ vars.RCLONE_REMOTE_NAME }}:/books
          rclone copy ${{ env.BOOK_PATH }} ${{ vars.RCLONE_REMOTE_NAME }}:/books/

      - name: Verify
        run: |
          rclone ls ${{ vars.RCLONE_REMOTE_NAME }}:/${{ env.BOOK_NAME }}
            
      
